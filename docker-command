#=== We must create a spring-reactive directory inside the minikube and mount our workspace into it
#=== We can create the specified directory using "minikube ssh"
minikube mount B:\SourceCodes\Java\spring-boot\spring-reactive:/home/docker/spring-reactive

#=== We go to the minikube vm and cd to the spring-reactive directory then build our image inside it
minikube ssh
docker build --file=Dockerfile --tag=spring-reactive:latest --rm=true .

#=== Now we back to the host and run the following command, this command gives up a yml file
#=== that we can provide for the command number 2 and create a deployment
1. kubectl create deployment spring-reactive --image=spring-reactive:latest -o yaml --dry-run
2. kubectl apply -f .\spring-reactive.yml

#== Expose our service over minikube(Kubernetes)
kubectl expose deployment spring-reactive --type=NodePort
#=== Check that out service is available
kubectl get services
#=== Here we connect to the service
minikube service spring-reactive
